<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button11.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAepJREFUWEft
        l71OwzAQgCsQf2JlY0ZMZYEX4AkYYeNXgok3QIrE1thum1agTEz8daAgIQYQQxcegIkXYAGJHUEK53An
        nUrUpokTL/mkU1ufz/50TeO0VFBQkJC6lMueEJee503gkHFqtdp8Q6k7X4gZHIpHU6mVhpSfED8Q90qp
        KUwZA8TKsPab3qMpxMuxUrOYGgwUXaDcXyh1a7KTYeekfGV7dCFWMT2YVqs1CgWnbAEdRjrJO4fxBd/Y
        Gqbjk4VkhNx3IjnCpKRxOcKEZIRcAHLrmE4PSp6xDWJLRsl5Um5g2hxJJHOTI4aRzF2OCCWFOGcb/5O0
        Jkf0k7QuR/i+PwabXzERfWQ9wfn9zsbsyBFRkiwC6OYmTrVHKCnEI5eDe1wXOreLU+xy5LoLIMWvOYpY
        98lM6ZXTnaP3GPYk60IsgsAHkwma1eoOvLbZmI6O67rTWJYPUXJwzW3pHP5w7En2kyOsScaRIxzHGYd8
        fpLDyBFaEuZcs5psJJPIEZlLppEjMpM0IUfgNXnD1konCefoEixgRI4wJhklB2PbmE5FaklYYAQKnlmx
        Pvj3MW2E8LlRiAe2h44DTA+mXqnMQYH+52+sc730dLKtb+6YigeIlSH28GMm6E7CQ+7hieNM4lBBQcFw
        lEq/iYou4xdbypYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADQAAAA0CAYAAADFeBvrAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAHYSURBVGhD7Zi9SgNREIWnUhQttLK09DHyEvapfI48go21PoIoWKkYtQoGRNjdiEgEGyttbETk
        Oic7ezNhE93sXwKZDw53c+7dMzkkCyFkGIZhGPOMi+ie9T5RPfri9acUxVmXvK7L+PLhAX2Wq1m3lZXi
        8FkUgqopxcHDQj06YO2OKKLA70fUkTNpDc84F9Kx8jve79GHv47P3biA1uStlAMH60+oKbaHvSu13xI7
        hToDNcSG3/J+SNe8nvrXsbpcalOOF4cD6yuErCda5rW6UhxWVqEjr0faETtVaOAFtMTXJ8qHuu6BNgY3
        FYGDSik0Cdyj7h8UAu6OVvmZOld7+EqeyXZ+OGgmhYB7pRX2LtR+X7bygxAV+HehkPZ53Z5K8T1J/kgh
        wF5T7ddcqLis0NQgRAUuQKGAttgf/3xMK86SWA/79RaqGsxU861QCoSoQCtUFMxU86srhGvll61Jc6xQ
        CoSowIUp9MZqFBQy/ptTW6EXsXODDJVnhTKDEBVohbKCDJVnhTKDEBVohbKCDJVnhTKDEBVohbKCDJVX
        W6FD1p4I/4LGfkif8jq/4oxkDrxkDmYmfumFZi0rlIJD2qznMcKv4++KhOxxM9vytgzDMAxjDiH6BQdW
        pKFw/+RlAAAAAElFTkSuQmCC
</value>
  </data>
</root>