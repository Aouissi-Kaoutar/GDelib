<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iTzRxMT/glsnB3psu1YAAAAASUVORK5CYII=
</value>
  </data>
</root>